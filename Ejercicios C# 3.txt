Problema 1:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            Problema1 E = new Problema1();
            E.ProgramaPrincipal();

            Console.WriteLine("Por favor presione enter para salir");
            Console.ReadKey();
        }
    }
    class Problema1
    {
        public void ProgramaPrincipal()
        {
            int Ingreso = 30;
            // Declaro los dos procedimientos.

            ProcedimientoPorValor(Ingreso);
            ProcedimientoPorReferencia(ref Ingreso);

            Console.WriteLine("El valor de la variable ingreso por valor es " + Ingreso + " y el valor de dicha variable por referencia es " + Ingreso);
        }
        public void ProcedimientoPorValor(int Ingreso)
        {

            Ingreso = 40;
        }
        private void ProcedimientoPorReferencia(ref int Ingreso)
        {
            Ingreso = 40;
        }
    }
}


Problema 2:

Codificar un programa principal que pida el ingreso de 2 variables numéricas, 
y que llame una función que calcule la suma de esas dos variables, 
y devuelva el resultado de la suma al programa principal.



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            Problema2 E = new Problema2();
            E.ProgramaPrincipal();

            Console.WriteLine("Presione enter para salir");
            Console.ReadKey();
        }
    }
    class Problema2
    {
        public void ProgramaPrincipal()
        {
            int Num1;
            int Num2;
            int Suma;
            
            
            Console.WriteLine("Por favor escriba el primer número");
            Num1 = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Por favor escriba el segundo número");
            Num2 = Convert.ToInt32(Console.ReadLine());
            Suma = SumaDeDosNumeros(Num1, Num2);
            Console.WriteLine(Suma);
        }
        public int SumaDeDosNumeros(int Num1, int Num2)
        {
            
            return Num1 + Num2;
        }
        

    }
}

Problema 3

Realizar un programa principal que llame a otro procedimiento en el que, se intercambien los valores de dos variables. 
(los valores deben intercambiarse para el alcance del procedimiento principal)

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            Problema3 E = new Problema3();
            E.ProgramaPrincipal();

            Console.WriteLine("Por favor presione enter para salir");
            Console.ReadLine();
        }
    }
    class Problema3
    {
        public void ProgramaPrincipal()
        {
            int Var1;
            int Var2;
            

            Console.WriteLine("Por favor escriba el primer número para intercambiar");
            Var1 = Convert.ToInt32(Console.ReadLine());

            Console.WriteLine("Por favor escriba el segundo número para intercambiar");
            Var2 = Convert.ToInt32(Console.ReadLine());


	    // Declaro el procedimiento.
            Procedimiento(Var1,Var2);

            

        }
        private void Procedimiento(int Var1, int Var2)
        {
            int Aux;
            Aux = Var1;
            Aux = Var2;
        }
    }

} 

Problema 4

Crear un programa que desde el programa principal llame a una función que permita el ingreso de un numero de 1 a 10 
(validándolo) y luego desde el principal muestre ese número.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            Ejercicios E = new Ejercicios();
            E.Problema4();


            Console.WriteLine("Presione enter para salir");
            Console.ReadKey();
        }
    }
    class Ejercicios
    {
        public void Problema4()
        {
            Byte Numero;
            Numero = IngresarNumero();
            Console.WriteLine("El número ingresado es " + Numero);
        }
        private Byte IngresarNumero()
        {
            String Numero;
            bool Flag = false;
            Byte Salida;

            do
            {
                Console.WriteLine("Ingrese un número del 1 al 10");
                Numero = Console.ReadLine();
                if (!Byte.TryParse(Numero, out Salida))
                {
                    Console.WriteLine("Usted debe ingresar un número entero que esté entre 1 y 10");
                }
                else if (Salida < 1 || Salida > 10)
                {
                    Console.WriteLine("Usted ingresó un número fuera de rango");
                }
                else
                {
                    Flag = true;
                }

            } while (Flag == false);
            return Salida;
        }
    }
}

Otra manera parecida a la hecha en clase de resolver este ejercicio:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            OtraManeraDeResolver E = new OtraManeraDeResolver();
            E.OtraFormaProblema4();
		
	    Console.WriteLine("Presione enter para salir");
            Console.ReadKey();

        }


    }
    class OtraManeraDeResolver
    {
        public void OtraFormaProblema4()
        {
            int Numero;
            Numero = IngresarNumeroOtraForma();
            Console.WriteLine("El número ingresado es " + Numero);

        }

        private int IngresarNumeroOtraForma()
        {
            String Numero;
            bool Flag = false;
            int Salida;
            do
            {
                Console.WriteLine("Por favor escriba un número del 1 al 10");
                Numero = Console.ReadLine();
                if (!int.TryParse(Numero, out Salida))
                {
                    Console.WriteLine("Debe ingresar un número del 1 al 10");
                }
                else if (Salida < 1 || Salida > 10)
                {
                    Console.WriteLine("El número ingresado está fuera de rango");
                }
                else
                {
                    Flag = true;
                }
            } while (Flag == false);
            return Salida;
        }
    }
}

Una TERCERA FORMA de resolver este ejercicio:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            OtraManeraDeResolver E = new OtraManeraDeResolver();
            E.TerceraFormaProblema4();

            Console.WriteLine("Presione enter para salir");
            Console.ReadKey();
        }


    }
    class OtraManeraDeResolver
    {
        public void TerceraFormaProblema4()
        {
            // Estas 3 lineas siguientes son iguales a la primera forma de solución.
            int Numero;
            Numero = IngresarNumeroTerceraForma();
            Console.WriteLine("El número ingresado es " + Numero);

        }

        private int IngresarNumeroTerceraForma()
        {
            String Numero;
            bool Flag = false;
            int Salida=0;
            do
            {
                Console.WriteLine("Por favor escriba un número del 1 al 10");
                Numero = Console.ReadLine();
                Flag = ValidarNumero(Numero, ref Salida);
                
            } 
            while (Flag == false);
            return Salida;
        }
        private bool ValidarNumero(String Numero, ref int Salida)
        {
            bool Flag = false;
            if (!int.TryParse(Numero, out Salida))
            {
                Console.WriteLine("Debe ingresar un número que esté entre 1 y 10");
            }
            else if (Salida<1 || Salida>10)
            {
                Console.WriteLine("El número ingresado está fuera de rango");
            }
            else
            {
                Flag = true;
            }
            return Flag;
        }

    }
}


Problema 5:


Codificar un programa principal que pida el ingreso de 2 variables numéricas, 
y que llame una función que calcule el producto de esas dos variables, 
y devuelva el resultado de la suma al programa principal. Validar que los ingresos sean valores numéricos y positivos.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            Problema5 E = new Problema5();
            E.ProgramaPrincipal();

            Console.WriteLine("Presione enter para salir");
            Console.ReadKey();
        }
    }
    class Problema5
    {
        public void ProgramaPrincipal()
        {
            String Numero1;
            String Numero2;
            bool Flag = false;
            int Num1;
            int Num2;
           
            do
            {
                Console.WriteLine("Por favor escriba un número mayor que cero");
                Numero1 = Console.ReadLine();

                if (!int.TryParse(Numero1, out Num1))
                {
                    Console.WriteLine("Ustedebe ingresar un número");
                }
                else if (Num1 <= 0)
                {
                    Console.WriteLine("Usted ingresó un número fuera de rango");
                }
                else
                {
                    Flag = true;
                }

            } while (Flag == false);

            do
            {
                Console.WriteLine("Por favor escriba otro número mayor que cero");
                Numero2 = Console.ReadLine();

                if (!int.TryParse(Numero2, out Num2))
                {
                    Console.WriteLine("Ustedebe ingresar un número");
                }
                else if (Num2 <= 0)
                {
                    Console.WriteLine("Usted ingresó un número fuera de rango");
                }
                else
                {
                    Flag = true;
                }
            } while (Flag == false);

            int Producto;
            // Declaro la función ProductoDeNumeros.
            Producto = ProductoDeNumeros(Num1, Num2);

            Console.WriteLine("El producto de los dos números es igual a "+Producto);
            
        }
        public int ProductoDeNumeros(int Num1, int Num2)
        {
            return Num1 * Num2;
        }
    }
}

Problema 6

Cree un programa que permita el ingreso de distintos datos de un artículo considerando lo pedido a continuación:
El ingreso del código del artículo debe efectuarse en una función que retornará el código validado. 
Los artículos se encuentran numerados del 1 al 999.
Genere un procedimiento para:
• el ingreso de la descripción del artículo.
• la carga y la validación del precio del artículo, teniendo en cuenta que no puede haber precios negativos ni valor 0.
• el despliegue por pantalla de todos los valores ingresados.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            Ejercicio E = new Ejercicio();
            E.Ejercicio6();


            Console.WriteLine("Presione enter para salir");
            Console.ReadKey();
        }


    }
    class Ejercicio
    {
        public void Ejercicio6()
        {
            int Articulo;
            string Descripcion = "";
            Single Precio = 0;
            // Creando la función IngresarArticulo.
            Articulo = IngresarArticulo();
            // Las lineas siguientes son PROCEDIMIENTOS y no FUNCIONES porque no están igualados a una VARIABLE.
            IngresarDescripcion(Articulo, ref Descripcion);
            IngresarPrecio(Articulo, ref Precio);
            MostrarDatos(Articulo, Descripcion, Precio);
        }
        public int IngresarArticulo()
        {
            String Articulo;
            bool Flag = false;
            int Salida;
            do
            {
                Console.WriteLine("Escriba un número de artículo entre 1 y 999");
                Articulo = Console.ReadLine();
                if (!int.TryParse(Articulo, out Salida))
                {
                    Console.WriteLine("Debe escribir un número que esté entre 1 y 999");
                }
                else if (Salida < 1 || Salida > 999)
                {
                    Console.WriteLine("El número ingresado está fuera de rango");
                }
                else
                {
                    Flag = true;
                }
            } while (Flag == false);
            return Salida;
        }
        private void IngresarDescripcion(int Articulo, ref String Descripcion)
        {
            
            bool Flag = false;
            do
            {
                
                Console.WriteLine("Por favor escriba la descripción del artículo " + Articulo);
                Descripcion = Console.ReadLine();
                if (String.IsNullOrEmpty(Descripcion))
                {
                    Console.WriteLine("Usted ingresó un dato vacío");
                }
                else
                {
                    Flag = true;
                }
            } while (Flag == false);
        }
        private void IngresarPrecio(int Articulo, ref Single Precio)
        {
            String Precio1;
            bool Flag = false;
            do
            {
                Console.WriteLine("Por favor escriba el precio del artículo");
                Precio1 = Console.ReadLine();
                if (!Single.TryParse(Precio1, out Precio))
                {
                    Console.WriteLine("El precio debe ser un valor numérico");
                }
                else if (Precio <= 0)
                {
                    Console.WriteLine("El precio ingresado está fuera de rango");
                }
                else
                {
                    Flag = true;
                }
            } while (Flag == false);

        }
        private void MostrarDatos(int Articulo, String Descripcion, Single Precio)
        {
            String Mensaje;
            Mensaje = "Articulo: " + Articulo + System.Environment.NewLine + "Descripcion: " + Descripcion + System.Environment.NewLine + "Precio: " + Precio;
            Console.WriteLine(Mensaje);
        }

    }
    

}

Problema 7:

Realizar un programa que permita calcular el valor final a pagar por una venta. Mediante una función Calcula_descuento, y en base al monto que se cargó y validó en el programa principal, se debe calcular y retornar el valor del descuento.
• Monto menor a $ 1.000 Descuento 10 %
• Monto entre $1.000 y $ 10.000 Descuento 15 %
• Monto entre $ 10.000 y $100.000 Descuento 20 %
Teoría de los Lenguajes y Algoritmos – Curso 1 – Guía 3
• Monto mayor a $100.000 Descuento 25 %
Intente realizar este ejercicio sin declarar variables adicionales en la función.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {

            Ejercicio7 E = new Ejercicio7();
            E.SolucionEj7();

            Console.WriteLine("Presione enter para salir");
            Console.ReadKey();
        }


    }
    class Ejercicio7
    {
        public void SolucionEj7()
        {
            Single Monto;
            Single Descuento;
            Single MontoFinal;
            String Monto1;
            bool Flag = false;
            do
            {
                Console.WriteLine("Por favor escriba el monto de la venta");
                Monto1 = Console.ReadLine();
                if (!Single.TryParse(Monto1, out Monto))
                {
                    Console.WriteLine("El Monto ingresado debe ser de tipo numérico");
                }
                else if (Monto<=0)
                {
                    Console.WriteLine("El Monto ingresado debe ser mayor que cero");
                }
                else
                {
                    Flag = true;
                }
            } while (Flag==false);
            Descuento = CalcularDescuento(Monto);
            MontoFinal = Monto - Descuento;
            Console.WriteLine("El monto final es " + MontoFinal);
        }
        private Single CalcularDescuento(Single Monto)
        {
            Single Descuento;
            if (Monto<1000)
            {
                Descuento = Monto * 0.10f;
            }
            else if (Monto<10000)
            {
                Descuento = Monto * 0.15f;
            }
            else if (Monto <= 100000)
            {
                Descuento = Monto * 0.20f;
            }
            else
            {
                Descuento = Monto * 0.25f;
            }
            return Descuento;
        }
    }
    

}
